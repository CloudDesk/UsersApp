//This class is used to check the functionality of PermissionPartnerSoapSforceCom class
@isTest
public class PermissionPartnerSoapSforceComTest {
    @isTest
    public static void describeAllTabsTest()
    {
        Test.setMock(WebServiceMock.class , new PermissionPartnerSoapSforceComMock());
        PermissionPartnerSoapSforceCom.soap soapObj = new PermissionPartnerSoapSforceCom.soap();  
        list<string> stringArr = new list<string>();
        DateTime startTime = DateTime.newInstance(2023, 11, 10, 14, 30, 0); 
        DateTime endTime = DateTime.newInstance(2023, 11, 10, 15, 30, 0);
        list<PermissionSobjectPartnerSoapSforceCom.sObject_x> sObjects = new list<PermissionSobjectPartnerSoapSforceCom.sObject_x>();
        
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DescribeTab';
        List<PermissionPartnerSoapSforceCom.DescribeTab> describeTabResultList = soapObj.describeAllTabs();
        System.assert(describeTabResultList.size() == 1, true);
        
        PermissionPartnerSoapSforceComMock.indicatorVar =  'GroupStructureRes';
        list<PermissionPartnerSoapSforceCom.DataCategoryGroupSobjectTypePair> groupSobjectTypePair = new list<PermissionPartnerSoapSforceCom.DataCategoryGroupSobjectTypePair>();
        soapObj.describeDataCategoryGroupStructures(groupSobjectTypePair, true);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'GroupResponse';        
        soapObj.describeDataCategoryGroups(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'FindDuplicates';        
        soapObj.findDuplicates(sObjects);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'Process';
        list<PermissionPartnerSoapSforceCom.ProcessRequest> processReq = new list<PermissionPartnerSoapSforceCom.ProcessRequest>();
        soapObj.Process(processReq);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DescribeGlobal';            
        soapObj.describeGlobal();
        PermissionPartnerSoapSforceComMock.indicatorVar = 'UserInfo';            
        soapObj.getUserInfo();
        PermissionPartnerSoapSforceComMock.indicatorVar = 'GlobalTheme';            
        soapObj.describeGlobalTheme();
        PermissionPartnerSoapSforceComMock.indicatorVar =  'ApprovalLayout';        
        soapObj.describeApprovalLayout('sObject',stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'CompactLayout';
        soapObj.describePrimaryCompactLayouts(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'QueryResult';       
        soapObj.queryMore('test');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'EntityResult';       
        soapObj.describeSearchableEntities(true);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'LayoutResult';  
        soapObj.describeLayout('testObject','testLayout', stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'AppMenu';       
        soapObj.describeAppMenu('testMenu', 'testNetworkId');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'LeadConvert';
        list<PermissionPartnerSoapSforceCom.LeadConvert> leadConvertList = new list<PermissionPartnerSoapSforceCom.LeadConvert>();
        soapObj.convertLead(leadConvertList);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'SobjectListView';       
        soapObj.describeSObjectListViews('testSobjectType',true, 'testisCompatible',1,1);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'DeleteResult'; 
        soapObj.delete_x(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'LoginResult';  
        soapObj.login('testUser','testId');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'QueryAllResult';  
        soapObj.queryAll('testQuery');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'SaveResult';
        PermissionPartnerSoapSforceComMock.indicatorVar =  'EmptyRecycleBinResult';
        soapObj.emptyRecycleBin(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'DescribeCompactLayoutsResult';
        soapObj.describeCompactLayouts('testSobject',stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'ChangeOwnPasswordResult';  
        soapObj.changeOwnPassword('testOldPassword', 'testNewPassword');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'SoqlListViews';
        PermissionPartnerSoapSforceCom.DescribeSoqlListViewsRequest request = new PermissionPartnerSoapSforceCom.DescribeSoqlListViewsRequest();
        soapObj.describeSoqlListViews(request);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'PathAssitantResult';
        soapObj.describePathAssistants('testSobject','testPicklist',stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'AvailabeQuickAction';
        soapObj.describeAvailableQuickActions('testContext');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'GetDeletedResult';        
        soapObj.getDeleted('testObject',startTime,endTime);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'DescribeTabSetResult';
        soapObj.describeTabs();
        PermissionPartnerSoapSforceComMock.indicatorVar =  'QuickActionTemplateResult';
        soapObj.retrieveMassQuickActionTemplates('testQuickAction', stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'SearchResult';
        soapObj.search_x('testSearch');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'SendEmail';
        list<PermissionPartnerSoapSforceCom.Email> sendEmailList = new list<PermissionPartnerSoapSforceCom.Email>();
        soapObj.sendEmail(sendEmailList);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'GetUpdatedResult';
        soapObj.getUpdated('testSobjectType',startTime,endTime);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'SendEmailMessage';
        soapObj.sendEmailMessage(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'QuickActionsForRecordType';
        soapObj.describeQuickActionsForRecordType(stringArr,'testId');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'RenderEmailTemplate';
        list<PermissionPartnerSoapSforceCom.RenderEmailTemplateRequest> renderRequests = new list<PermissionPartnerSoapSforceCom.RenderEmailTemplateRequest>();
        soapObj.renderEmailTemplate(renderRequests);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'UpsertResult';
        PermissionPartnerSoapSforceComMock.indicatorVar =  'QueryResultInt';
        soapObj.query('test query');
        PermissionPartnerSoapSforceComMock.indicatorVar =  'DescribeQuickActionResult';
        soapObj.describeQuickActions(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'PerformQuickActions';        
        list<PermissionPartnerSoapSforceCom.PerformQuickActionRequest> performQuickActionList = new list<PermissionPartnerSoapSforceCom.PerformQuickActionRequest>();
        soapObj.performQuickActions(performQuickActionList);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'DescribeSobjectResult';
        soapObj.describeSObjects(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'KnowledgeSettings';
        soapObj.describeKnowledgeSettings();
        PermissionPartnerSoapSforceComMock.indicatorVar = 'UndeleteResult';
        soapObj.undelete_x(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'Retrieve';
        soapObj.retrieve_x('testfield', 'testObject', stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DescribeTheme';
        soapObj.describeTheme(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DeleteByExample';
        soapObj.deleteByExample(sObjects);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DescribeNounResult';
        soapObj.describeNouns(stringArr, true, true);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'FindDuplicatesResult';
        soapObj.findDuplicatesByIds(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'ExecuteListView';
        PermissionPartnerSoapSforceCom.ExecuteListViewRequest listViewRequest = new PermissionPartnerSoapSforceCom.ExecuteListViewRequest();
        soapObj.executeListView(listViewRequest);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'RenderStoredEmailTemplate';
        PermissionPartnerSoapSforceCom.RenderStoredEmailTemplateRequest renderStoredEmail = new PermissionPartnerSoapSforceCom.RenderStoredEmailTemplateRequest();
        soapObj.renderStoredEmailTemplate(renderStoredEmail);
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DescribeVisualForce';
        soapObj.describeVisualForce(true, 'teststring');
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DescribeSObject';
        soapObj.describeSObject('Test sobject');
        PermissionPartnerSoapSforceComMock.indicatorVar = 'GetServerTimestamp';
        soapObj.getServerTimestamp();
        PermissionPartnerSoapSforceComMock.indicatorVar = 'RetrieveQuickActionTemplates';
        soapObj.retrieveQuickActionTemplates(stringArr, 'testContextId' );
        PermissionPartnerSoapSforceComMock.indicatorVar = 'SetPassword';
        soapObj.setPassword('testId', 'testpassword');
        PermissionPartnerSoapSforceComMock.indicatorVar   = 'ResetPassword';
        soapObj.resetPassword('testUserId');
        PermissionPartnerSoapSforceComMock.indicatorVar  =  'DescribeSoftphoneLayout';
        soapObj.describeSoftphoneLayout();
        PermissionPartnerSoapSforceComMock.indicatorVar  = 'Create';        
        soapObj.create(sObjects);
        PermissionPartnerSoapSforceComMock.indicatorVar  = 'DescribeSearchLayouts';
        soapObj.describeSearchLayouts(stringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar  = 'Merge';
        list<PermissionPartnerSoapSforceCom.MergeRequest> mergeResultList = new list<PermissionPartnerSoapSforceCom.MergeRequest>();
        soapObj.merge_x(mergeResultList);
        PermissionPartnerSoapSforceComMock.indicatorVar  = 'InvalidateSessions';
        soapObj.invalidateSessions(StringArr);
        PermissionPartnerSoapSforceComMock.indicatorVar =  'DescribeDataCategoryMappings';
        soapObj.DescribeDataCategoryMappings();
        PermissionPartnerSoapSforceComMock.indicatorVar = 'Logout';
        soapObj.logout();
        PermissionPartnerSoapSforceComMock.indicatorVar = 'DescribeSearchScopeOrder';
        soapObj.describeSearchScopeOrder(true);
        
        new PermissionPartnerSoapSforceCom.InvalidateSessionsResult();
        new PermissionPartnerSoapSforceCom.DescribeColor();
        new PermissionPartnerSoapSforceCom.MergeResult();
        new PermissionPartnerSoapSforceCom.CallOptions_element();
        new PermissionPartnerSoapSforceCom.SaveResult();
        new PermissionPartnerSoapSforceCom.ExtendedErrorDetails();
        new PermissionPartnerSoapSforceCom.MergeRequest();
        new PermissionPartnerSoapSforceCom.RecordTypeInfo();
        new PermissionPartnerSoapSforceCom.DescribeRelatedContentItem();
        new PermissionPartnerSoapSforceCom.DescribeQuickActionResult();
        new PermissionPartnerSoapSforceCom.JunctionIdListNames();
        new PermissionPartnerSoapSforceCom.UpsertResult();
        new PermissionPartnerSoapSforceCom.LeadConvert();
        new PermissionPartnerSoapSforceCom.RenderEmailTemplateError();
        new PermissionPartnerSoapSforceCom.DescribeAvailableQuickActionResult();
        new PermissionPartnerSoapSforceCom.EmptyRecycleBinResult();
        new PermissionPartnerSoapSforceCom.SingleEmailMessage();
        new PermissionPartnerSoapSforceCom.DescribeSearchScopeOrderResult();
        new PermissionPartnerSoapSforceCom.DescribeSoftphoneScreenPopOption();
        new PermissionPartnerSoapSforceCom.LimitInfoHeader_element();
        new PermissionPartnerSoapSforceCom.MassEmailMessage();
        new PermissionPartnerSoapSforceCom.NameCaseValue();
        new PermissionPartnerSoapSforceCom.DeleteResult();
        new PermissionPartnerSoapSforceCom.SearchLayoutField();
        new PermissionPartnerSoapSforceCom.DescribeQuickActionDefaultValue();
        new PermissionPartnerSoapSforceCom.NameValueTypeTriple();
        new PermissionPartnerSoapSforceCom.DescribeSoftphoneLayoutInfoField();
        new PermissionPartnerSoapSforceCom.DebuggingHeader_element();
        new PermissionPartnerSoapSforceCom.PackageVersion();
        new PermissionPartnerSoapSforceCom.DataCategoryGroupSobjectTypePair();
        new PermissionPartnerSoapSforceCom.SearchRecord();
        new PermissionPartnerSoapSforceCom.EntityErrorMetadata();
        new PermissionPartnerSoapSforceCom.DescribeLayoutButtonSection();
        new PermissionPartnerSoapSforceCom.AllOrNoneHeader_element();
        new PermissionPartnerSoapSforceCom.LocaleOptions_element();
        new PermissionPartnerSoapSforceCom.DescribeDataCategoryMappingResult();
        new PermissionPartnerSoapSforceCom.DescribeLayoutSaveOption();
        new PermissionPartnerSoapSforceCom.UserTerritoryDeleteHeader_element();
        new PermissionPartnerSoapSforceCom.FindDuplicatesResult();
        new PermissionPartnerSoapSforceCom.DescribeAnimationRule();
        new PermissionPartnerSoapSforceCom.address();
        new PermissionPartnerSoapSforceCom.LogInfo();
        new PermissionPartnerSoapSforceCom.DeletedRecord();
        new PermissionPartnerSoapSforceCom.DescribeColumn();
        new PermissionPartnerSoapSforceCom.DebuggingInfo_element();
        new PermissionPartnerSoapSforceCom.DescribeThemeItem();
        new PermissionPartnerSoapSforceCom.DescribeDataCategoryGroupResult();
        new PermissionPartnerSoapSforceCom.DescribePathAssistantField();
        new PermissionPartnerSoapSforceCom.DescribeSoqlListViewParams();
        new PermissionPartnerSoapSforceCom.AllowFieldTruncationHeader_element();
        new PermissionPartnerSoapSforceCom.DescribeSearchLayoutResult();
        new PermissionPartnerSoapSforceCom.PicklistEntry();
        new PermissionPartnerSoapSforceCom.AdditionalInformationMap();
        new PermissionPartnerSoapSforceCom.DescribeDataCategoryGroupStructureResult();
        new PermissionPartnerSoapSforceCom.EmailFileAttachment();
        new PermissionPartnerSoapSforceCom.Email();
        new PermissionPartnerSoapSforceCom.DescribeIcon();
        new PermissionPartnerSoapSforceCom.QueryOptions_element();
        new PermissionPartnerSoapSforceCom.RenderEmailTemplateBodyResult();
        new PermissionPartnerSoapSforceCom.EmailHeader_element();
        new PermissionPartnerSoapSforceCom.ReportChartComponent();
        new PermissionPartnerSoapSforceCom.DescribeQuickActionListItemResult();
        new PermissionPartnerSoapSforceCom.OwnerChangeOptions_element();
        new PermissionPartnerSoapSforceCom.DescribeLayoutItem();
        new PermissionPartnerSoapSforceCom.Canvas();
        new PermissionPartnerSoapSforceCom.ProcessResult();
        new PermissionPartnerSoapSforceCom.RelatedListColumn();
        new PermissionPartnerSoapSforceCom.FieldLevelSearchMetadata();
        new PermissionPartnerSoapSforceCom.MatchRecord();
        new PermissionPartnerSoapSforceCom.SoqlSubQueryCondition();
        new PermissionPartnerSoapSforceCom.DescribeLayoutSection();
        new PermissionPartnerSoapSforceCom.ActionOverride();
        new PermissionPartnerSoapSforceCom.DescribePathAssistant();
        new PermissionPartnerSoapSforceCom.FilteredLookupInfo();
        new PermissionPartnerSoapSforceCom.MatchResult();
        new PermissionPartnerSoapSforceCom.DescribeCompactLayout();
        new PermissionPartnerSoapSforceCom.CurrencyConversionHeader_element();
        new PermissionPartnerSoapSforceCom.Field();
        new PermissionPartnerSoapSforceCom.LeadConvertResult();
        new PermissionPartnerSoapSforceCom.LoginScopeHeader_element();
        new PermissionPartnerSoapSforceCom.ChildRelationship();
        new PermissionPartnerSoapSforceCom.RelatedList();
        new PermissionPartnerSoapSforceCom.ChangeEventHeader();
        new PermissionPartnerSoapSforceCom.location();
        new PermissionPartnerSoapSforceCom.DuplicateRuleHeader_element();
        new PermissionPartnerSoapSforceCom.SearchSnippet();
        new PermissionPartnerSoapSforceCom.DataCategory();
        new PermissionPartnerSoapSforceCom.DescribeAppMenuItem();
        new PermissionPartnerSoapSforceCom.ProcessSubmitRequest();
        new PermissionPartnerSoapSforceCom.DeleteByExampleResult();
        new PermissionPartnerSoapSforceCom.SoqlConditionGroup();
        new PermissionPartnerSoapSforceCom.DescribeLayout();
        new PermissionPartnerSoapSforceCom.ListViewOrderBy();
        new PermissionPartnerSoapSforceCom.SearchResultsMetadata();
        new PermissionPartnerSoapSforceCom.RenderEmailTemplateResult();
        new PermissionPartnerSoapSforceCom.FieldDiff();
        new PermissionPartnerSoapSforceCom.SessionHeader_element();
        new PermissionPartnerSoapSforceCom.DescribePathAssistantStep();
        new PermissionPartnerSoapSforceCom.DescribeQuickActionListResult();
        new PermissionPartnerSoapSforceCom.RelatedListSort();
        new PermissionPartnerSoapSforceCom.DuplicateError();
        new PermissionPartnerSoapSforceCom.SendEmailResult();
        new PermissionPartnerSoapSforceCom.MruHeader_element();
        new PermissionPartnerSoapSforceCom.DescribeNounResult();
        new PermissionPartnerSoapSforceCom.EntitySpellCorrectionMetadata();
        new PermissionPartnerSoapSforceCom.SearchLayoutFieldsDisplayed();
        new PermissionPartnerSoapSforceCom.PicklistForRecordType();
        new PermissionPartnerSoapSforceCom.DescribeLayoutFeedView();
        new PermissionPartnerSoapSforceCom.StringList();
        new PermissionPartnerSoapSforceCom.RecordTypeMapping();
        new PermissionPartnerSoapSforceCom.StreamingEnabledHeader_element();
        new PermissionPartnerSoapSforceCom.AnalyticsCloudComponent();
        new PermissionPartnerSoapSforceCom.RelatedContent();
        new PermissionPartnerSoapSforceCom.SearchLayoutButton();
        new PermissionPartnerSoapSforceCom.PerformQuickActionRequest();
        new PermissionPartnerSoapSforceCom.DuplicateResult();
        new PermissionPartnerSoapSforceCom.DescribeTab();
        new PermissionPartnerSoapSforceCom.LabelsSearchMetadata();
        new PermissionPartnerSoapSforceCom.EntitySearchPromotionMetadata();
        new PermissionPartnerSoapSforceCom.DescribeTabSetResult();
        new PermissionPartnerSoapSforceCom.DescribeSearchableEntityResult();
        new PermissionPartnerSoapSforceCom.LimitInfo();
        new PermissionPartnerSoapSforceCom.EntityIntentQueryMetadata();
        new PermissionPartnerSoapSforceCom.QuickActionTemplateResult();
        new PermissionPartnerSoapSforceCom.DescribeSoqlListView();
        new PermissionPartnerSoapSforceCom.RenderEmailTemplateRequest();
        new PermissionPartnerSoapSforceCom.SearchRecordMetadata();
        new PermissionPartnerSoapSforceCom.RecordTypesSupported();
        new PermissionPartnerSoapSforceCom.NamedLayoutInfo();
        new PermissionPartnerSoapSforceCom.PackageVersionHeader_element();
        new PermissionPartnerSoapSforceCom.DescribeSoftphoneLayoutSection();
        new PermissionPartnerSoapSforceCom.DisableFeedTrackingHeader_element();
        new PermissionPartnerSoapSforceCom.DescribeLayoutFeedFilter();
        new PermissionPartnerSoapSforceCom.EntitySearchMetadata();
        new PermissionPartnerSoapSforceCom.DescribeLayoutButton();
        new PermissionPartnerSoapSforceCom.ProcessRequest();
        new PermissionPartnerSoapSforceCom.NameObjectValuePair();
        new PermissionPartnerSoapSforceCom.ListViewRecordColumn();
        new PermissionPartnerSoapSforceCom.AssignmentRuleHeader_element();
        new PermissionPartnerSoapSforceCom.SoqlCondition();
        new PermissionPartnerSoapSforceCom.DescribeApprovalLayout();
        new PermissionPartnerSoapSforceCom.SearchLayoutButtonsDisplayed();
        new PermissionPartnerSoapSforceCom.SendEmailError();
        new PermissionPartnerSoapSforceCom.VisualforcePage();
        new PermissionPartnerSoapSforceCom.ProcessWorkitemRequest();
        new PermissionPartnerSoapSforceCom.RelationshipReferenceTo();
        new PermissionPartnerSoapSforceCom.NameValuePair();
        new PermissionPartnerSoapSforceCom.OwnerChangeOption();
        new PermissionPartnerSoapSforceCom.FieldComponent();
        new PermissionPartnerSoapSforceCom.DescribeLayoutRow();
        new PermissionPartnerSoapSforceCom.DescribeGlobalSObjectResult();
        new PermissionPartnerSoapSforceCom.DescribeSoftphoneLayoutItem();
        new PermissionPartnerSoapSforceCom.DescribeSoftphoneLayoutCallType();
        new PermissionPartnerSoapSforceCom.Error();
        new PermissionPartnerSoapSforceCom.ScopeInfo();
        new PermissionPartnerSoapSforceCom.RecordTypeCompactLayoutMapping();
        new PermissionPartnerSoapSforceCom.CustomLinkComponent();
        new PermissionPartnerSoapSforceCom.SoqlWhereCondition();
        new PermissionPartnerSoapSforceCom.PerformQuickActionResult();
        new PermissionPartnerSoapSforceCom.KnowledgeLanguageItem();
        new PermissionPartnerSoapSforceCom.ListViewColumn();
        new PermissionPartnerSoapSforceCom.SoqlNotCondition();
        new PermissionPartnerSoapSforceCom.SimpleNameObjectValuePair();
        new PermissionPartnerSoapSforceCom.UndeleteResult();
        new PermissionPartnerSoapSforceCom.DescribeLayoutComponent();
        new PermissionPartnerSoapSforceCom.FieldLayoutComponent();
        new PermissionPartnerSoapSforceCom.ListViewRecord();
    }
}