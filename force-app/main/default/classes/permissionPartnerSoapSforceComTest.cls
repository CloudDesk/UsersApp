@isTest
public class PermissionPartnerSoapSforceComTest {
	@isTest
    public static void describeAllTabsTest()
    {
       Test.setMock(WebServiceMock.class , new PermissionPartnerSoapSforceComMock());
        permissionPartnerSoapSforceCom.soap soapObj = new permissionPartnerSoapSforceCom.soap();  
        list<string> stringArr = new list<string>();
        DateTime startTime = DateTime.newInstance(2023, 11, 10, 14, 30, 0); 
        DateTime endTime = DateTime.newInstance(2023, 11, 10, 15, 30, 0);
        list<permissionSobjectPartnerSoapSforceCom.sObject_x> sObjects = new list<permissionSobjectPartnerSoapSforceCom.sObject_x>();
        permissionPartnerSoapSforceComMock.indicatorVar = 'DescribeTab';            
        soapObj.describeAllTabs();
        
        permissionPartnerSoapSforceComMock.indicatorVar =  'GroupStructureRes';
        list<permissionPartnerSoapSforceCom.DataCategoryGroupSobjectTypePair> groupSobjectTypePair = new list<permissionPartnerSoapSforceCom.DataCategoryGroupSobjectTypePair>();
		soapObj.describeDataCategoryGroupStructures(groupSobjectTypePair, true);
        permissionPartnerSoapSforceComMock.indicatorVar =  'GroupResponse';        
        soapObj.describeDataCategoryGroups(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'FindDuplicates';        
        soapObj.findDuplicates(sObjects);
        permissionPartnerSoapSforceComMock.indicatorVar =  'Process';
        list<permissionPartnerSoapSforceCom.ProcessRequest> processReq = new list<permissionPartnerSoapSforceCom.ProcessRequest>();
        soapObj.Process(processReq);
        permissionPartnerSoapSforceComMock.indicatorVar = 'DescribeGlobal';            
        soapObj.describeGlobal();
        permissionPartnerSoapSforceComMock.indicatorVar = 'UserInfo';            
        soapObj.getUserInfo();
        permissionPartnerSoapSforceComMock.indicatorVar = 'GlobalTheme';            
        soapObj.describeGlobalTheme();
        permissionPartnerSoapSforceComMock.indicatorVar =  'ApprovalLayout';        
        soapObj.describeApprovalLayout('sObject',stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'CompactLayout';
		soapObj.describePrimaryCompactLayouts(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'QueryResult';       
        soapObj.queryMore('test');
        permissionPartnerSoapSforceComMock.indicatorVar =  'EntityResult';       
        soapObj.describeSearchableEntities(true);
        permissionPartnerSoapSforceComMock.indicatorVar =  'LayoutResult';  
        soapObj.describeLayout('testObject','testLayout', stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'AppMenu';       
        soapObj.describeAppMenu('testMenu', 'testNetworkId');
        permissionPartnerSoapSforceComMock.indicatorVar =  'LeadConvert';
        list<permissionPartnerSoapSforceCom.LeadConvert> leadConvertList = new list<permissionPartnerSoapSforceCom.LeadConvert>();
        soapObj.convertLead(leadConvertList);
        permissionPartnerSoapSforceComMock.indicatorVar =  'SobjectListView';       
       	soapObj.describeSObjectListViews('testSobjectType',true, 'testisCompatible',1,1);
        permissionPartnerSoapSforceComMock.indicatorVar =  'DeleteResult'; 
        soapObj.delete_x(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'LoginResult';  
        soapObj.login('testUser','testId');
        permissionPartnerSoapSforceComMock.indicatorVar =  'QueryAllResult';  
        soapObj.queryAll('testQuery');
        permissionPartnerSoapSforceComMock.indicatorVar =  'SaveResult';
        permissionPartnerSoapSforceComMock.indicatorVar =  'EmptyRecycleBinResult';
        soapObj.emptyRecycleBin(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'DescribeCompactLayoutsResult';
        soapObj.describeCompactLayouts('testSobject',stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'ChangeOwnPasswordResult';  
        soapObj.changeOwnPassword('testOldPassword', 'testNewPassword');
        permissionPartnerSoapSforceComMock.indicatorVar =  'SoqlListViews';
        permissionPartnerSoapSforceCom.DescribeSoqlListViewsRequest request = new permissionPartnerSoapSforceCom.DescribeSoqlListViewsRequest();
        soapObj.describeSoqlListViews(request);
        permissionPartnerSoapSforceComMock.indicatorVar =  'PathAssitantResult';
        soapObj.describePathAssistants('testSobject','testPicklist',stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'AvailabeQuickAction';
        soapObj.describeAvailableQuickActions('testContext');
        permissionPartnerSoapSforceComMock.indicatorVar =  'GetDeletedResult';        
        soapObj.getDeleted('testObject',startTime,endTime);
        permissionPartnerSoapSforceComMock.indicatorVar =  'DescribeTabSetResult';
        soapObj.describeTabs();
        permissionPartnerSoapSforceComMock.indicatorVar =  'QuickActionTemplateResult';
        soapObj.retrieveMassQuickActionTemplates('testQuickAction', stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'SearchResult';
       	soapObj.search_x('testSearch');
        permissionPartnerSoapSforceComMock.indicatorVar =  'SendEmail';
        list<permissionPartnerSoapSforceCom.Email> sendEmailList = new list<permissionPartnerSoapSforceCom.Email>();
        soapObj.sendEmail(sendEmailList);
        permissionPartnerSoapSforceComMock.indicatorVar =  'GetUpdatedResult';
        soapObj.getUpdated('testSobjectType',startTime,endTime);
        permissionPartnerSoapSforceComMock.indicatorVar =  'SendEmailMessage';
        soapObj.sendEmailMessage(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'QuickActionsForRecordType';
        soapObj.describeQuickActionsForRecordType(stringArr,'testId');
        permissionPartnerSoapSforceComMock.indicatorVar =  'RenderEmailTemplate';
        list<permissionPartnerSoapSforceCom.RenderEmailTemplateRequest> renderRequests = new list<permissionPartnerSoapSforceCom.RenderEmailTemplateRequest>();
        soapObj.renderEmailTemplate(renderRequests);
        permissionPartnerSoapSforceComMock.indicatorVar =  'UpsertResult';
        permissionPartnerSoapSforceComMock.indicatorVar =  'QueryResultInt';
        soapObj.query('test query');
        permissionPartnerSoapSforceComMock.indicatorVar =  'DescribeQuickActionResult';
        soapObj.describeQuickActions(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'PerformQuickActions';        
        list<permissionPartnerSoapSforceCom.PerformQuickActionRequest> performQuickActionList = new list<permissionPartnerSoapSforceCom.PerformQuickActionRequest>();
        soapObj.performQuickActions(performQuickActionList);
        permissionPartnerSoapSforceComMock.indicatorVar =  'DescribeSobjectResult';
        soapObj.describeSObjects(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar = 'KnowledgeSettings';
        soapObj.describeKnowledgeSettings();
        permissionPartnerSoapSforceComMock.indicatorVar = 'UndeleteResult';
        soapObj.undelete_x(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar = 'Retrieve';
        soapObj.retrieve_x('testfield', 'testObject', stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar = 'DescribeTheme';
        soapObj.describeTheme(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar = 'DeleteByExample';
        soapObj.deleteByExample(sObjects);
        permissionPartnerSoapSforceComMock.indicatorVar = 'DescribeNounResult';
        soapObj.describeNouns(stringArr, true, true);
        permissionPartnerSoapSforceComMock.indicatorVar = 'FindDuplicatesResult';
        soapObj.findDuplicatesByIds(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar = 'ExecuteListView';
        permissionPartnerSoapSforceCom.ExecuteListViewRequest listViewRequest = new permissionPartnerSoapSforceCom.ExecuteListViewRequest();
        soapObj.executeListView(listViewRequest);
        permissionPartnerSoapSforceComMock.indicatorVar = 'RenderStoredEmailTemplate';
        permissionPartnerSoapSforceCom.RenderStoredEmailTemplateRequest renderStoredEmail = new permissionPartnerSoapSforceCom.RenderStoredEmailTemplateRequest();
        soapObj.renderStoredEmailTemplate(renderStoredEmail);
        permissionPartnerSoapSforceComMock.indicatorVar = 'DescribeVisualForce';
        soapObj.describeVisualForce(true, 'teststring');
        permissionPartnerSoapSforceComMock.indicatorVar = 'DescribeSObject';
        soapObj.describeSObject('Test sobject');
        permissionPartnerSoapSforceComMock.indicatorVar = 'GetServerTimestamp';
        soapObj.getServerTimestamp();
        permissionPartnerSoapSforceComMock.indicatorVar = 'RetrieveQuickActionTemplates';
        soapObj.retrieveQuickActionTemplates(stringArr, 'testContextId' );
        permissionPartnerSoapSforceComMock.indicatorVar = 'SetPassword';
        soapObj.setPassword('testId', 'testpassword');
        permissionPartnerSoapSforceComMock.indicatorVar   = 'ResetPassword';
        soapObj.resetPassword('testUserId');
        permissionPartnerSoapSforceComMock.indicatorVar  =  'DescribeSoftphoneLayout';
        soapObj.describeSoftphoneLayout();
        permissionPartnerSoapSforceComMock.indicatorVar  = 'Create';        
        soapObj.create(sObjects);
         permissionPartnerSoapSforceComMock.indicatorVar  = 'DescribeSearchLayouts';
         soapObj.describeSearchLayouts(stringArr);
        permissionPartnerSoapSforceComMock.indicatorVar  = 'Merge';
        list<permissionPartnerSoapSforceCom.MergeRequest> mergeResultList = new list<permissionPartnerSoapSforceCom.MergeRequest>();
        soapObj.merge_x(mergeResultList);
        permissionPartnerSoapSforceComMock.indicatorVar  = 'InvalidateSessions';
        soapObj.invalidateSessions(StringArr);
        permissionPartnerSoapSforceComMock.indicatorVar =  'DescribeDataCategoryMappings';
        soapObj.DescribeDataCategoryMappings();
        permissionPartnerSoapSforceComMock.indicatorVar = 'Logout';
        soapObj.logout();
        permissionPartnerSoapSforceComMock.indicatorVar = 'DescribeSearchScopeOrder';
        soapObj.describeSearchScopeOrder(true);
            
        new permissionPartnerSoapSforceCom.InvalidateSessionsResult();
        new permissionPartnerSoapSforceCom.DescribeColor();
        new permissionPartnerSoapSforceCom.MergeResult();
        new permissionPartnerSoapSforceCom.CallOptions_element();
        new permissionPartnerSoapSforceCom.SaveResult();
        new permissionPartnerSoapSforceCom.ExtendedErrorDetails();
        new permissionPartnerSoapSforceCom.MergeRequest();
        new permissionPartnerSoapSforceCom.RecordTypeInfo();
        new permissionPartnerSoapSforceCom.DescribeRelatedContentItem();
        new permissionPartnerSoapSforceCom.DescribeQuickActionResult();
        new permissionPartnerSoapSforceCom.JunctionIdListNames();
        new permissionPartnerSoapSforceCom.UpsertResult();
        new permissionPartnerSoapSforceCom.LeadConvert();
        new permissionPartnerSoapSforceCom.RenderEmailTemplateError();
        new permissionPartnerSoapSforceCom.DescribeAvailableQuickActionResult();
        new permissionPartnerSoapSforceCom.EmptyRecycleBinResult();
        new permissionPartnerSoapSforceCom.SingleEmailMessage();
        new permissionPartnerSoapSforceCom.DescribeSearchScopeOrderResult();
        new permissionPartnerSoapSforceCom.DescribeSoftphoneScreenPopOption();
        new permissionPartnerSoapSforceCom.LimitInfoHeader_element();
        new permissionPartnerSoapSforceCom.MassEmailMessage();
        new permissionPartnerSoapSforceCom.NameCaseValue();
        new permissionPartnerSoapSforceCom.DeleteResult();
        new permissionPartnerSoapSforceCom.SearchLayoutField();
        new permissionPartnerSoapSforceCom.DescribeQuickActionDefaultValue();
        new permissionPartnerSoapSforceCom.NameValueTypeTriple();
        new permissionPartnerSoapSforceCom.DescribeSoftphoneLayoutInfoField();
        new permissionPartnerSoapSforceCom.DebuggingHeader_element();
        new permissionPartnerSoapSforceCom.PackageVersion();
        new permissionPartnerSoapSforceCom.DataCategoryGroupSobjectTypePair();
        new permissionPartnerSoapSforceCom.SearchRecord();
        new permissionPartnerSoapSforceCom.EntityErrorMetadata();
        new permissionPartnerSoapSforceCom.DescribeLayoutButtonSection();
        new permissionPartnerSoapSforceCom.AllOrNoneHeader_element();
        new permissionPartnerSoapSforceCom.LocaleOptions_element();
        new permissionPartnerSoapSforceCom.DescribeDataCategoryMappingResult();
        new permissionPartnerSoapSforceCom.DescribeLayoutSaveOption();
        new permissionPartnerSoapSforceCom.UserTerritoryDeleteHeader_element();
        new permissionPartnerSoapSforceCom.FindDuplicatesResult();
        new permissionPartnerSoapSforceCom.DescribeAnimationRule();
        new permissionPartnerSoapSforceCom.address();
        new permissionPartnerSoapSforceCom.LogInfo();
        new permissionPartnerSoapSforceCom.DeletedRecord();
        new permissionPartnerSoapSforceCom.DescribeColumn();
        new permissionPartnerSoapSforceCom.DebuggingInfo_element();
        new permissionPartnerSoapSforceCom.DescribeThemeItem();
        new permissionPartnerSoapSforceCom.DescribeDataCategoryGroupResult();
        new permissionPartnerSoapSforceCom.DescribePathAssistantField();
        new permissionPartnerSoapSforceCom.DescribeSoqlListViewParams();
        new permissionPartnerSoapSforceCom.AllowFieldTruncationHeader_element();
        new permissionPartnerSoapSforceCom.DescribeSearchLayoutResult();
        new permissionPartnerSoapSforceCom.PicklistEntry();
        new permissionPartnerSoapSforceCom.AdditionalInformationMap();
        new permissionPartnerSoapSforceCom.DescribeDataCategoryGroupStructureResult();
        new permissionPartnerSoapSforceCom.EmailFileAttachment();
        new permissionPartnerSoapSforceCom.Email();
        new permissionPartnerSoapSforceCom.DescribeIcon();
        new permissionPartnerSoapSforceCom.QueryOptions_element();
        new permissionPartnerSoapSforceCom.RenderEmailTemplateBodyResult();
        new permissionPartnerSoapSforceCom.EmailHeader_element();
        new permissionPartnerSoapSforceCom.ReportChartComponent();
        new permissionPartnerSoapSforceCom.DescribeQuickActionListItemResult();
        new permissionPartnerSoapSforceCom.OwnerChangeOptions_element();
        new permissionPartnerSoapSforceCom.DescribeLayoutItem();
        new permissionPartnerSoapSforceCom.Canvas();
        new permissionPartnerSoapSforceCom.ProcessResult();
        new permissionPartnerSoapSforceCom.RelatedListColumn();
        new permissionPartnerSoapSforceCom.FieldLevelSearchMetadata();
        new permissionPartnerSoapSforceCom.MatchRecord();
        new permissionPartnerSoapSforceCom.SoqlSubQueryCondition();
        new permissionPartnerSoapSforceCom.DescribeLayoutSection();
        new permissionPartnerSoapSforceCom.ActionOverride();
        new permissionPartnerSoapSforceCom.DescribePathAssistant();
        new permissionPartnerSoapSforceCom.FilteredLookupInfo();
        new permissionPartnerSoapSforceCom.MatchResult();
        new permissionPartnerSoapSforceCom.DescribeCompactLayout();
        new permissionPartnerSoapSforceCom.CurrencyConversionHeader_element();
        new permissionPartnerSoapSforceCom.Field();
        new permissionPartnerSoapSforceCom.LeadConvertResult();
        new permissionPartnerSoapSforceCom.LoginScopeHeader_element();
        new permissionPartnerSoapSforceCom.ChildRelationship();
        new permissionPartnerSoapSforceCom.RelatedList();
        new permissionPartnerSoapSforceCom.ChangeEventHeader();
        new permissionPartnerSoapSforceCom.location();
        new permissionPartnerSoapSforceCom.DuplicateRuleHeader_element();
        new permissionPartnerSoapSforceCom.SearchSnippet();
        new permissionPartnerSoapSforceCom.DataCategory();
        new permissionPartnerSoapSforceCom.DescribeAppMenuItem();
        new permissionPartnerSoapSforceCom.ProcessSubmitRequest();
        new permissionPartnerSoapSforceCom.DeleteByExampleResult();
        new permissionPartnerSoapSforceCom.SoqlConditionGroup();
        new permissionPartnerSoapSforceCom.DescribeLayout();
        new permissionPartnerSoapSforceCom.ListViewOrderBy();
        new permissionPartnerSoapSforceCom.SearchResultsMetadata();
        new permissionPartnerSoapSforceCom.RenderEmailTemplateResult();
        new permissionPartnerSoapSforceCom.FieldDiff();
        new permissionPartnerSoapSforceCom.SessionHeader_element();
        new permissionPartnerSoapSforceCom.DescribePathAssistantStep();
        new permissionPartnerSoapSforceCom.DescribeQuickActionListResult();
        new permissionPartnerSoapSforceCom.RelatedListSort();
        new permissionPartnerSoapSforceCom.DuplicateError();
        new permissionPartnerSoapSforceCom.SendEmailResult();
        new permissionPartnerSoapSforceCom.MruHeader_element();
        new permissionPartnerSoapSforceCom.DescribeNounResult();
        new permissionPartnerSoapSforceCom.EntitySpellCorrectionMetadata();
        new permissionPartnerSoapSforceCom.SearchLayoutFieldsDisplayed();
        new permissionPartnerSoapSforceCom.PicklistForRecordType();
        new permissionPartnerSoapSforceCom.DescribeLayoutFeedView();
        new permissionPartnerSoapSforceCom.StringList();
        new permissionPartnerSoapSforceCom.RecordTypeMapping();
        new permissionPartnerSoapSforceCom.StreamingEnabledHeader_element();
        new permissionPartnerSoapSforceCom.AnalyticsCloudComponent();
        new permissionPartnerSoapSforceCom.RelatedContent();
        new permissionPartnerSoapSforceCom.SearchLayoutButton();
        new permissionPartnerSoapSforceCom.PerformQuickActionRequest();
        new permissionPartnerSoapSforceCom.DuplicateResult();
        new permissionPartnerSoapSforceCom.DescribeTab();
        new permissionPartnerSoapSforceCom.LabelsSearchMetadata();
        new permissionPartnerSoapSforceCom.EntitySearchPromotionMetadata();
        new permissionPartnerSoapSforceCom.DescribeTabSetResult();
        new permissionPartnerSoapSforceCom.DescribeSearchableEntityResult();
        new permissionPartnerSoapSforceCom.LimitInfo();
        new permissionPartnerSoapSforceCom.EntityIntentQueryMetadata();
        new permissionPartnerSoapSforceCom.QuickActionTemplateResult();
        new permissionPartnerSoapSforceCom.DescribeSoqlListView();
        new permissionPartnerSoapSforceCom.RenderEmailTemplateRequest();
        new permissionPartnerSoapSforceCom.SearchRecordMetadata();
        new permissionPartnerSoapSforceCom.RecordTypesSupported();
        new permissionPartnerSoapSforceCom.NamedLayoutInfo();
        new permissionPartnerSoapSforceCom.PackageVersionHeader_element();
        new permissionPartnerSoapSforceCom.DescribeSoftphoneLayoutSection();
        new permissionPartnerSoapSforceCom.DisableFeedTrackingHeader_element();
        new permissionPartnerSoapSforceCom.DescribeLayoutFeedFilter();
        new permissionPartnerSoapSforceCom.EntitySearchMetadata();
        new permissionPartnerSoapSforceCom.DescribeLayoutButton();
        new permissionPartnerSoapSforceCom.ProcessRequest();
        new permissionPartnerSoapSforceCom.NameObjectValuePair();
        new permissionPartnerSoapSforceCom.ListViewRecordColumn();
        new permissionPartnerSoapSforceCom.AssignmentRuleHeader_element();
        new permissionPartnerSoapSforceCom.SoqlCondition();
        new permissionPartnerSoapSforceCom.DescribeApprovalLayout();
        new permissionPartnerSoapSforceCom.SearchLayoutButtonsDisplayed();
        new permissionPartnerSoapSforceCom.SendEmailError();
        new permissionPartnerSoapSforceCom.VisualforcePage();
        new permissionPartnerSoapSforceCom.ProcessWorkitemRequest();
        new permissionPartnerSoapSforceCom.RelationshipReferenceTo();
        new permissionPartnerSoapSforceCom.NameValuePair();
        new permissionPartnerSoapSforceCom.OwnerChangeOption();
        new permissionPartnerSoapSforceCom.FieldComponent();
        new permissionPartnerSoapSforceCom.DescribeLayoutRow();
        new permissionPartnerSoapSforceCom.DescribeGlobalSObjectResult();
        new permissionPartnerSoapSforceCom.DescribeSoftphoneLayoutItem();
        new permissionPartnerSoapSforceCom.DescribeSoftphoneLayoutCallType();
        new permissionPartnerSoapSforceCom.Error();
        new permissionPartnerSoapSforceCom.ScopeInfo();
        new permissionPartnerSoapSforceCom.RecordTypeCompactLayoutMapping();
        new permissionPartnerSoapSforceCom.CustomLinkComponent();
        new permissionPartnerSoapSforceCom.SoqlWhereCondition();
        new permissionPartnerSoapSforceCom.PerformQuickActionResult();
        new permissionPartnerSoapSforceCom.KnowledgeLanguageItem();
        new permissionPartnerSoapSforceCom.ListViewColumn();
        new permissionPartnerSoapSforceCom.SoqlNotCondition();
        new permissionPartnerSoapSforceCom.SimpleNameObjectValuePair();
        new permissionPartnerSoapSforceCom.UndeleteResult();
        new permissionPartnerSoapSforceCom.DescribeLayoutComponent();
        new permissionPartnerSoapSforceCom.FieldLayoutComponent();
        new permissionPartnerSoapSforceCom.ListViewRecord();
		
    }
}